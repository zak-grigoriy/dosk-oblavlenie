<?php
  // Включить файлы функций для данного приложения
  require_once('bookmark_fns.php');
 
  // Создать короткие имена переменных
  $email=$_POST['email'];
  $username=$_POST['username'];
  $passwd=$_POST['passwd'];
  $passwd2=$_POST['passwd2'];
  // Запустить сеанс, который может потребоваться позже.
  // Его следует запустить сейчас, поскольку это должно
  // делаться перед заголовками.
  session_start();
 
  try {
    // Проверить, заполнены ли поля формы
    if (!filled_out($_POST)) {
      throw new Exception('Вы не заполнили корректно форму. ' 
        .'вернитесь на форму и повторите попытку.');
    }    

    // Недопустимый адрес электронной почты
   // if (valid_email($email)) {
	//	if ($email) {
	//	if (!$email) 
    //  throw new Exception('Недопустимый адрес электронной почты. ' 
    //    .'вернитесь на форму и повторите попытку.');
    //} 

    // Проверить допустимость длины пароля.
    // Имя пользователя может быть усечено, но не пароль
    if ((strlen($passwd) < 6) || (strlen($passwd) > 16)) {
      throw new Exception('Пароль должен содержать от 6 до 16 символов. '
        .'Вернитесь на форму и повторите попытку.');
    }

    // Предпринять попытку регистрации. Эта функция 
    // также может сгенерировать исключение
    register($username, $email, $passwd);

    // Зарегистрировать переменную сеанса 
    $_SESSION['valid_user'] = $username;

    // Вывести ссылку на страницу, предназначенную 
    // для зарегистрированных пользователей
    do_html_header('Успешная регистрация');
    echo 'Ваша регистрация прошла успешно. Переходите на страницу '
         .'для зарегистрированных пользователей '
         .'и приступайте к созданию закладок!';
    do_html_url('member.php',
                'Перейти на страницу для зарегистрированных пользователей');

    // Конец страницы
    do_html_footer();
  }
  catch (Exception $e) {
  do_html_header('Problem:');
  echo $e->getMessage();
  do_html_footer();
  exit;
}
?>
